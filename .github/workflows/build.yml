name: Build

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  #schedule:
  #  - cron: '39 18 * * *'
  push:
    branches: [ "*" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:

    build_ui:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                repository: Maker-Management-Platform/mmp-ui


            - name: Cache node modules
              uses: actions/cache@v4
              env:
                cache-name: cache-node-modules
              with:
                # npm cache files are stored in `~/.npm` on Linux/macOS
                path: ~/.npm
                key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                    ${{ runner.os }}-build-${{ env.cache-name }}-
                    ${{ runner.os }}-build-
                    ${{ runner.os }}-
                    
                
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20.10'
            - run: npm ci
            - run: npm run build --if-present
    
            - uses: actions/upload-artifact@v4
              with:
                name: ui
                path: dist/
    
    build_zips:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write
        needs: build_ui
        strategy:
            matrix:
                goos: ['windows', 'linux', 'darwin']
                goarch: ['amd64', 'arm64']
                exclude:
                    - goos: 'windows'
                      goarch: 'arm64'

        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
          
          - run: mkdir artifacts
          
          - uses: actions/download-artifact@v4
            with:
              name: ui
              path: artifacts/ui

          - name: Setup Go
            uses: actions/setup-go@v5
            with:
              go-version: '1.21'
              cache-dependency-path: go.sum
          
          - run: go build -o artifacts/ main.go 
            env:
              GOOS: ${{ matrix.goos }}
              GOARCH: ${{ matrix.goarch }}

          - run: ls -laR ./artifacts
            name: ${{ matrix.goos }} - ${{ matrix.goarch }}

          - uses: actions/upload-artifact@v4
            with:
              name: ${{ matrix.goos }} - ${{ matrix.goarch }}
              path: artifacts/

    build_docker:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write
        needs: build_ui

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
      
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - run: mkdir artifacts

            - uses: actions/download-artifact@v4
              with:
                name: ui
                path: artifacts/ui

            # Workaround: https://github.com/docker/build-push-action/issues/461
            - name: Setup Docker buildx
              uses: docker/setup-buildx-action@v3

            # Login against a Docker registry except on PR
            # https://github.com/docker/login-action
            - name: Log into registry ${{ env.REGISTRY }}
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v3
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            # Extract metadata (tags, labels) for Docker
            # https://github.com/docker/metadata-action
            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            # Build and push Docker image with Buildx (don't push on PR)
            # https://github.com/docker/build-push-action
            - name: Build and push Docker image
              id: build-and-push
              uses: docker/build-push-action@v5
              with:
                file: helpers/Dockerfile
                platforms: linux/amd64,linux/arm64
                context: .
                push: ${{ github.event_name != 'pull_request' }}
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}